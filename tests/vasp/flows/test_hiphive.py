from jobflow import run_locally
from numpy.testing import assert_allclose
from pymatgen.core.structure import Structure
from pymatgen.phonon.bandstructure import PhononBandStructureSymmLine
from pymatgen.phonon.dos import PhononDos

from atomate2.common.flows.hiphive import BaseHiphiveMaker
from atomate2.common.flows.phonons import BasePhononMaker
from atomate2.common.powerups import add_metadata_to_flow
from atomate2.common.schemas.hiphive import (
    ForceConstants,
    PhononBSDOSDoc,
    PhononComputationalSettings,
    PhononJobDirs,
    PhononUUIDs,
    ThermalDisplacementData,
)
from atomate2.vasp.flows.core import DoubleRelaxMaker
from atomate2.vasp.flows.hiphive import HiphiveMaker
from atomate2.vasp.jobs.base import BaseVaspMaker
from atomate2.vasp.jobs.core import TightRelaxMaker
from atomate2.vasp.jobs.phonons import PhononDisplacementMaker


def test_hiphive_wf_vasp(mock_vasp, clean_dir, test_dir):
    # mapping from job name to directory containing test files
    ref_paths = {
        "tight relax 1": "Si_hiphive/tight_relax_1",
        "tight relax 2": "Si_hiphive/tight_relax_2",
        "phonon static 1/4": "Si_hiphive/phonon_static_1_4",
        "phonon static 2/4": "Si_hiphive/phonon_static_2_4",
        "phonon static 3/4": "Si_hiphive/phonon_static_3_4",
        "phonon static 4/4": "Si_hiphive/phonon_static_4_4",
    }

    # settings passed to fake_run_vasp; adjust these to check for certain INCAR settings
    fake_run_vasp_kwargs = {
        "tight relax 1": {"incar_settings": ["NSW", "ISMEAR"]},
        "tight relax 2": {"incar_settings": ["NSW", "ISMEAR"]},
        "phonon static 1/4": {"incar_settings": ["NSW", "ISMEAR"]},
        "phonon static 2/4": {"incar_settings": ["NSW", "ISMEAR"]},
        "phonon static 3/4": {"incar_settings": ["NSW", "ISMEAR"]},
        "phonon static 4/4": {"incar_settings": ["NSW", "ISMEAR"]},
    }

    # automatically use fake VASP and write POTCAR.spec dulsring the test
    mock_vasp(ref_paths, fake_run_vasp_kwargs)

    si_struct = Structure.from_file(
        test_dir / "vasp/Si_hiphive/tight_relax_1/inputs/POSCAR.gz"
    )

    min_length = 6
    disp_cut = 0.05
    min_atoms = 30
    max_atoms = 50
    supercell_matrix_kwargs = {
        "min_atoms": min_atoms,
        "max_atoms": max_atoms,
        "force_diagonal": True,
    }

    job = HiphiveMaker(
        supercell_matrix_kwargs=supercell_matrix_kwargs,
        min_length=min_length,
        code="vasp",
    ).make(
        mpid="mp-149",
        structure=si_struct,
        bulk_modulus=89,
        disp_cut=disp_cut,
    )

    job = add_metadata_to_flow(
        flow=job,
        additional_fields={"project": "hiphive_unit_test"},
        class_filter=(
            DoubleRelaxMaker,
            TightRelaxMaker,
            BaseVaspMaker,
            PhononDisplacementMaker,
            BasePhononMaker,
            HiphiveMaker,
            BaseHiphiveMaker,
        ),
    )

    # run the flow or job and ensure that it finished running successfully
    responses = run_locally(job, create_folders=True, ensure_success=True)

    # validate the outputs
    assert isinstance(responses[job.jobs[-1].uuid][1].output, PhononBSDOSDoc)
    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.free_energies,
        [
            5996.475041164254,
            5996.474199726997,
            5996.453005834313,
            5996.25654877896,
            5995.353731735742,
            5992.817833713253,
            5987.568222978423,
            5978.570835629409,
            5964.919147881639,
            5945.847051748049,
            5920.718784006014,
            5889.015101127187,
            5850.320531539404,
            5804.31181004804,
            5750.746924263767,
            5689.454540956843,
            5620.323896494623,
            5543.29535227478,
            5458.351796556117,
            5365.511000296318,
            5264.818956639393,
            5156.344172743387,
            5040.1728431841275,
            4916.404813348597,
            4785.150234051645,
            4646.526810312552,
            4500.657554082521,
            4347.668960096908,
            4187.6895342360895,
            4020.8486137953378,
            3847.2754283317154,
            3667.098358019808,
            3480.444353636197,
            3287.438488437673,
            3088.203617387223,
            2882.8601235242654,
            2671.5257348863015,
            2454.3153983769434,
            2231.341199439378,
            2002.712318421595,
            1768.5350161846118,
            1528.912642871017,
            1283.9456648708326,
            1033.7317059395778,
            778.3655991752091,
            517.9394471767135,
            252.5426882119234,
            -17.737833364351307,
            -292.81779386174793,
            -572.6153153175517,
            -857.0508897863285,
            -1146.047303584171,
            -1439.5295620632312,
            -1737.4248153672058,
            -2039.6622855164374,
            -2346.17319508792,
            -2656.890697687518,
            -2971.7498103565536,
            -3290.687348009972,
            -3613.641859967181,
            -3940.553568607455,
            -4271.364310158468,
            -4606.017477607981,
            -4944.457965714119,
            -5286.632118078246,
            -5632.487676235766,
            -5981.973730713599,
            -6335.040673998304,
            -6691.640155355467,
            -7051.725037438825,
            -7415.249354626328,
            -7782.168273019967,
            -8152.438052046258,
            -8526.016007594952,
            -8902.860476634527,
            -9282.930783244366,
            -9666.18720600498,
            -10052.590946689326,
            -10442.104100200186,
            -10834.689625700265,
            -11230.311318883712,
            -11628.933785339732,
            -12030.522414960777,
            -12435.043357349836,
            -12842.46349818321,
            -13252.750436487013,
            -13665.872462787453,
            -14081.798538096675,
            -14500.498273697767,
            -14921.941911693975,
            -15346.10030628897,
            -15772.944905766402,
            -16202.447735138441,
            -16634.58137943451,
            -17069.318967602594,
            -17506.634156996963,
            -17946.501118427204,
            -18388.8945217448,
            -18833.789521944404,
            -19281.161745758254,
        ],
        rtol=1e-5,
        atol=1e-5,
    )

    assert isinstance(
        responses[job.jobs[-1].uuid][1].output.phonon_bandstructure,
        PhononBandStructureSymmLine,
    )
    assert isinstance(responses[job.jobs[-1].uuid][1].output.phonon_dos, PhononDos)
    assert isinstance(
        responses[job.jobs[-1].uuid][1].output.thermal_displacement_data,
        ThermalDisplacementData,
    )
    assert isinstance(responses[job.jobs[-1].uuid][1].output.structure, Structure)
    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.temperatures,
        [
            0,
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250,
            260,
            270,
            280,
            290,
            300,
            310,
            320,
            330,
            340,
            350,
            360,
            370,
            380,
            390,
            400,
            410,
            420,
            430,
            440,
            450,
            460,
            470,
            480,
            490,
            500,
            510,
            520,
            530,
            540,
            550,
            560,
            570,
            580,
            590,
            600,
            610,
            620,
            630,
            640,
            650,
            660,
            670,
            680,
            690,
            700,
            710,
            720,
            730,
            740,
            750,
            760,
            770,
            780,
            790,
            800,
            810,
            820,
            830,
            840,
            850,
            860,
            870,
            880,
            890,
            900,
            910,
            920,
            930,
            940,
            950,
            960,
            970,
            980,
            990,
        ],
    )
    assert responses[job.jobs[-1].uuid][1].output.has_imaginary_modes is False
    assert isinstance(
        responses[job.jobs[-1].uuid][1].output.force_constants, ForceConstants
    )
    assert isinstance(responses[job.jobs[-1].uuid][1].output.jobdirs, PhononJobDirs)
    assert isinstance(responses[job.jobs[-1].uuid][1].output.uuids, PhononUUIDs)
    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.supercell_matrix,
        [[-2.0, -2.0, 2.0], [-2.0, 2.0, -2.0], [2.0, -2.0, -2.0]],
    )
    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.primitive_matrix,
        [[0.0, 0.0, -1.0], [0.0, -1.0, 0.0], [-1.0, 0.0, 0.0]],
        rtol=1e-5,
        atol=1e-10,
    )
    assert responses[job.jobs[-1].uuid][1].output.code == "vasp"
    assert isinstance(
        responses[job.jobs[-1].uuid][1].output.phonopy_settings,
        PhononComputationalSettings,
    )
    assert responses[job.jobs[-1].uuid][1].output.phonopy_settings.npoints_band == 101
    assert (
        responses[job.jobs[-1].uuid][1].output.phonopy_settings.kpath_scheme
        == "seekpath"
    )
    assert (
        responses[job.jobs[-1].uuid][1].output.phonopy_settings.kpoint_density_dos
        == 7000
    )
    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.entropies,
        [
            0.0,
            0.0003514422735110269,
            0.005925725827513983,
            0.0421930242943324,
            0.15432043988535035,
            0.3712097344657012,
            0.696064829429383,
            1.118532005016821,
            1.6245532858262144,
            2.2004381823394468,
            2.8338482900251196,
            3.5137936977700504,
            4.230489766226699,
            4.97527041996249,
            5.74054538827298,
            6.519761547651541,
            7.3073469656429015,
            8.098634327473317,
            8.889769541131486,
            9.677613662407056,
            10.459645261027463,
            11.23386823809233,
            11.998728031644424,
            12.753037524746905,
            13.495912858140203,
            14.226718667047802,
            14.945021895033998,
            15.650553183379555,
            16.343174812151844,
            17.02285422247485,
            17.6896422410225,
            18.34365523402357,
            18.98506052524345,
            19.614064512954503,
            20.230903011233345,
            20.835833419815362,
            21.429128394328497,
            22.01107074586041,
            22.581949346638353,
            23.142055858356123,
            23.6916821325635,
            24.231118159630707,
            24.760650465075617,
            25.280560870320738,
            25.791125549932108,
            26.292614329668734,
            26.78529017972682,
            27.269408865799768,
            27.74521872732361,
            28.21296055780888,
            28.67286756669662,
            29.125165405897548,
            29.57007224723024,
            30.00779889948354,
            30.438548955892493,
            30.862518964513292,
            31.27989861537905,
            31.690870939466592,
            32.095612515450156,
            32.49429368099625,
            32.8870787459943,
            33.274126205644905,
            33.655588951760954,
            34.03161448099267,
            34.40234509898039,
            34.76791811967774,
            35.128466059284285,
            35.484116824386234,
            35.83499389403375,
            36.18121649558882,
            36.52289977426247,
            36.86015495632818,
            37.193089506052495,
            37.52180727642644,
            37.84640865381455,
            38.166990696663746,
            38.483647268433174,
            38.79646916492007,
            39.105544236166025,
            39.410957503134135,
            39.712791269350575,
            40.01112522770538,
            40.30603656260583,
            40.59760004767405,
            40.88588813917651,
            41.170971065369265,
            41.45291691193741,
            41.731791703702086,
            42.007659482762385,
            42.2805823832338,
            42.5506207027384,
            42.81783297079617,
            43.0822760142604,
            43.344005019934286,
            43.60307359449979,
            43.85953382188391,
            44.11343631818204,
            44.36483028425238,
            44.61376355609009,
            44.86028265308503,
        ],
        atol=1e-6,
    )
    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.heat_capacities,
        [
            0.0,
            0.0011868003840771405,
            0.028034154256417927,
            0.2009551099977339,
            0.6485781063419351,
            1.3595431369205297,
            2.255468264450785,
            3.266343406515264,
            4.345030847460179,
            5.459276810546103,
            6.584049337246838,
            7.698421094730239,
            8.785103204310895,
            9.83066401753151,
            10.825552552619895,
            11.763768034484103,
            12.64229266802984,
            13.460442497125165,
            14.219247130533086,
            14.920916094983887,
            15.568410803255496,
            16.165118665117106,
            16.7146154410529,
            17.220498811453748,
            17.686276808699812,
            18.11529706060478,
            18.510705522893172,
            18.87542595398425,
            19.212153576086067,
            19.523358122597617,
            19.81129282657783,
            20.0780069227314,
            20.32535998475757,
            20.555036963001697,
            20.768563175541495,
            20.96731877972719,
            21.15255244185952,
            21.325394053424603,
            21.486866430302257,
            21.63789598916472,
            21.779322431952757,
            21.911907491358473,
            22.03634280229226,
            22.15325696964408,
            22.263221903570138,
            22.36675849165218,
            22.464341673696424,
            22.556404980421142,
            22.643344592332866,
            22.7255229700477,
            22.803272102387663,
            22.876896413903097,
            22.94667536911254,
            23.012865806745612,
            23.07570403363029,
            23.13540770457687,
            23.19217751165858,
            23.246198703651245,
            23.29764245404487,
            23.346667093953943,
            23.393419224402656,
            23.438034720823556,
            23.480639641159293,
            23.521351047676305,
            23.560277751467613,
            23.597520987622158,
            23.633175028154362,
            23.667327739007018,
            23.700061086750253,
            23.731451599988663,
            23.761570789948593,
            23.790485534238893,
            23.81825842735472,
            23.844948101117776,
            23.870609517913,
            23.89529423928512,
            23.919050672195343,
            23.941924295003787,
            23.96395786503493,
            23.98519160939703,
            24.00566340056069,
            24.025408918053603,
            24.044461797496005,
            24.062853768083,
            24.080614779513724,
            24.09777311927245,
            24.11435552108127,
            24.13038726526754,
            24.145892271720452,
            24.160893186049147,
            24.175411459499095,
            24.18946742313331,
            24.20308035673952,
            24.21626855288366,
            24.229049376493077,
            24.241439320319376,
            24.253454056600646,
            24.26510848521541,
            24.276416778595795,
            24.287392423644828,
        ],
        rtol=1e-5,
        atol=1e-5,
    )

    assert_allclose(
        responses[job.jobs[-1].uuid][1].output.internal_energies,
        [
            5996.475041164254,
            5996.477713192104,
            5996.571519393219,
            5997.522338549997,
            6001.526548372723,
            6011.378319476532,
            6029.332111781312,
            6056.868075013315,
            6094.883409774392,
            6143.886487177431,
            6204.103612017741,
            6275.532406879701,
            6357.97930247125,
            6451.096963612934,
            6554.423277575255,
            6667.418772039798,
            6789.499409913215,
            6920.063186840122,
            7058.510312832553,
            7204.257595003152,
            7356.748007670027,
            7515.456501542569,
            7679.893008919433,
            7849.603442786817,
            8024.169318723846,
            8203.206475764464,
            8386.363245452072,
            8573.318318240243,
            8763.778480239047,
            8957.476336882552,
            9154.16809917656,
            9353.631479073356,
            9555.663720188079,
            9760.079776153992,
            9966.710639614892,
            10175.401818834645,
            10386.01195518593,
            10598.411572652747,
            10812.48194943522,
            11028.114101419309,
            11245.20786741417,
            11463.671086488877,
            11683.41885833677,
            11904.372878276388,
            12126.460839208761,
            12349.615893555434,
            12573.77616887825,
            12798.884331517582,
            13024.887193173528,
            13251.735355892522,
            13479.382891409346,
            13707.787051234469,
            13936.908004270792,
            14166.708599096673,
            14397.154148366308,
            14628.212233058292,
            14859.85252455166,
            15092.04662272923,
            15324.76790850378,
            15557.991409336022,
            15791.693676467215,
            16025.852672725627,
            16260.447669887044,
            16495.459154676966,
            16730.868742597315,
            16966.65909884522,
            17202.81386566677,
            17439.317595555447,
            17676.15568976463,
            17913.31434165674,
            18150.780484458755,
            18388.541743036425,
            18626.586389336906,
            18864.90330118366,
            19103.481924137446,
            19342.312236164504,
            19581.384714877116,
            19820.690307133795,
            20060.22040080573,
            20299.966798533835,
            20539.921693316566,
            20780.077645783087,
            21020.427563019086,
            21260.96467882429,
            21501.682535291275,
            21742.574965604603,
            21983.636077967978,
            22224.86024057487,
            22466.242067545318,
            22707.77640575772,
            22949.4583225106,
            23191.283093954506,
            23433.24619423888,
            23675.34328532347,
            23917.570207407614,
            24159.922969934454,
            24402.397743130532,
            24644.990850044236,
            24887.69875904936,
            25130.51807678263,
        ],
        rtol=1e-5,
        atol=1e-5,
    )
    assert responses[job.jobs[-1].uuid][1].output.chemsys == "Si"
