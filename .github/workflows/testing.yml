name: testing

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: false
          environment-name: atomate2
          channels: conda-forge
          python-version: "3.9"

      - name: Install dependencies
        run: |
          micromamba create --name atomate2 --file pyproject.toml --channel conda-forge
          micromamba run -n atomate2 pip install .[dev]

      - uses: pre-commit/action@v3.0.0

  test:
    services:
      local_mongodb:
        image: mongo:4.0
        ports:
          - 27017:27017

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: false
          environment-name: atomate2
          channels: conda-forge
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          micromamba create --name atomate2 --file pyproject.toml --channel conda-forge
          micromamba run -n atomate2 pip install .[strict,tests]

      - name: Test
        env:
          MP_API_KEY: ${{ secrets.MP_API_KEY }}
        run: micromamba run -n atomate2 pytest --cov=atomate2 --cov-report=xml

      - uses: codecov/codecov-action@v1
        if: matrix.python-version == '3.10' && github.repository == 'materialsproject/atomate2'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: false
          environment-name: atomate2
          channels: conda-forge
          python-version: "3.10"

      - name: Install dependencies
        run: |
          micromamba create --name atomate2 --file pyproject.toml --channel conda-forge
          micromamba run -n atomate2 pip install .[strict,docs]

      - name: Build
        run: micromamba run -n atomate2 sphinx-build docs docs_build

  automerge:
    needs: [lint, test, docs]
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3
